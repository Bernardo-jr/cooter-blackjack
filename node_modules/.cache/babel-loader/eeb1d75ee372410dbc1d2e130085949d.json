{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bernardorios/react/app/src/componentes/partida.js\";\nimport { Component } from 'react';\nimport pichonImg from '../pichon.png';\nimport Carta from './carta';\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap';\nexport default class Partida extends Component {\n  constructor(props) {\n    super(props);\n    this.numero = 0;\n    this.index = 0;\n    this.valores = [];\n    this.palos = [];\n    this.initialState = {\n      pichon: [],\n      puntosPichon: 0,\n      asPichon: false,\n      fin: false,\n      casa: [],\n      puntosCasa: 0,\n      asCasa: false\n    };\n    this.state = this.initialState;\n    this.valores = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n    this.palos = [\"♣\", \"♠\", \"♥\", \"♦\"];\n    this.getCard = this.getCard.bind(this);\n    this.plantarse = this.plantarse.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCard(null, false);\n    await this.getCard(null, true);\n    await this.getCard(null, false);\n    await this.getCard(null, true);\n  }\n\n  plantarse(e) {\n    var aux = this.state.casa;\n    aux.forEach(c => {\n      c.visible = true;\n    });\n    this.setState({\n      fin: true,\n      casa: [...aux]\n    });\n\n    while (this.state.puntosCasa < 17) {\n      console.log(this.state.puntosCasa);\n      aux = this.state.casa;\n      this.getCard(null, this.state.casa, this.state.puntosCasa);\n      this.setState({\n        casa: [...aux]\n      });\n    }\n\n    console.log(this.state.puntosCasa);\n  }\n\n  refresh() {\n    this.setState(this.initialState);\n  }\n\n  contar(pts, as) {\n    let p = pts;\n\n    if (\"JQK\".includes(this.numero)) {\n      p = p + 10;\n    } else if (this.numero.includes(\"A\")) {\n      if (p + 11 > 21 || as) {\n        p = p + 1;\n      } else {\n        as = true;\n        p = p + 11;\n      }\n    } else {\n      p = p + parseInt(this.numero);\n    }\n\n    return [p, as];\n  }\n\n  async getCard(e, esCasa) {\n    this.index = Math.floor(Math.random() * this.palos.length);\n    this.numero = this.valores[Math.floor(Math.random() * this.valores.length)];\n\n    if (esCasa) {\n      var c = this.state.casa;\n      var aux = this.contar(this.state.puntosCasa, this.state.asCasa);\n\n      if (c.length === 0 || this.state.fin) {\n        c.push({\n          numero: this.numero,\n          index: this.index,\n          visible: true\n        });\n      } else {\n        c.push({\n          numero: this.numero,\n          index: this.index,\n          visible: false\n        });\n      }\n\n      await this.setState({\n        casa: [...c],\n        puntosCasa: parseInt(aux[0]),\n        asCasa: aux[1]\n      });\n    } else {\n      var c = this.state.pichon;\n      var points = this.state.puntosPichon;\n      var aux = this.contar(points, this.state.asPichon);\n      c.push({\n        numero: this.numero,\n        index: this.index\n      });\n      await this.setState({\n        pichon: [...c],\n        puntosPichon: parseInt(aux[0]),\n        asPichon: aux[1]\n      }, () => {\n        return this.puntosPichon;\n      });\n      if (this.state.puntosPichon >= 21) this.plantarse(null);\n    }\n\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        padding: '5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          minHeight: '20rem'\n        },\n        className: \"justify-content-md-center\",\n        children: this.state.casa.map((card, i) => {\n          return card.visible ? /*#__PURE__*/_jsxDEV(Col, {\n            xs: true,\n            lg: \"2\",\n            children: /*#__PURE__*/_jsxDEV(Carta, {\n              numero: card.numero,\n              palo: this.palos[card.index],\n              color: card.index <= 1 ? 'text-black' : 'text-danger'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 35\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 12\n          }, this) : /*#__PURE__*/_jsxDEV(Col, {\n            xs: true,\n            lg: \"2\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"dark\",\n              style: {\n                width: '10rem',\n                height: '15rem',\n                padding: '0.125rem'\n              },\n              className: \"justify-content-md-center\",\n              children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: pichonImg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 35\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 12\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          minHeight: '20rem'\n        },\n        className: \"justify-content-md-center\",\n        children: this.state.pichon.map((card, i) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            xs: true,\n            lg: \"2\",\n            children: /*#__PURE__*/_jsxDEV(Carta, {\n              numero: card.numero,\n              palo: this.palos[card.index],\n              color: card.index <= 1 ? 'text-black' : 'text-danger'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: e => this.getCard(e, false),\n          children: \"Dame Carta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: this.plantarse,\n          children: \"Plantarse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: this.refresh,\n          children: \"Repartir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), \"\\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/bernardorios/react/app/src/componentes/partida.js"],"names":["Component","pichonImg","Carta","Container","Row","Col","Button","Card","Partida","constructor","props","numero","index","valores","palos","initialState","pichon","puntosPichon","asPichon","fin","casa","puntosCasa","asCasa","state","getCard","bind","plantarse","componentDidMount","e","aux","forEach","c","visible","setState","console","log","refresh","contar","pts","as","p","includes","parseInt","esCasa","Math","floor","random","length","push","points","render","padding","minHeight","map","card","i","width","height"],"mappings":"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","sourcesContent":["import {Component} from 'react';\nimport pichonImg from '../pichon.png';\nimport Carta from './carta';\nimport {Container,Row,Col,Button,Card} from 'react-bootstrap';\n\nexport default class Partida extends Component{\n\n    \n    numero=0;\n    index=0;\n    valores=[];\n    palos=[];\n    initialState={\n        pichon:[],\n        puntosPichon:0,\n        asPichon:false,\n        fin:false,\n        casa:[],\n        puntosCasa:0,\n        asCasa:false,\n    };\n    constructor(props){\n        super(props);\n        this.state=this.initialState;\n        this.valores=[\"A\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"J\",\"Q\",\"K\"];\n        this.palos=[\"♣\" , \"♠\", \"♥\" , \"♦\" ];\n        this.getCard=this.getCard.bind(this);\n        this.plantarse=this.plantarse.bind(this);\n    }\n\n    async componentDidMount(){\n        await this.getCard(null,false);\n        await this.getCard(null,true);\n        await this.getCard(null,false);\n        await this.getCard(null,true);\n    }\n  \n    plantarse(e){\n      var aux=this.state.casa;\n      aux.forEach((c)=>{\n        c.visible=true;\n      });\n      this.setState({\n        fin:true,\n        casa:[...aux]\n      });\n\n      while(this.state.puntosCasa<17){\n        console.log(this.state.puntosCasa)\n        aux=this.state.casa;\n        this.getCard(null,this.state.casa,this.state.puntosCasa);\n        this.setState({casa:[...aux]});\n      }\n      console.log(this.state.puntosCasa)\n  \n    }\n    \n    refresh(){\n        this.setState(this.initialState);\n    }\n    \n    \n    contar(pts,as){\n      let p=pts;\n      if(\"JQK\".includes(this.numero)){\n        p=p+10;\n      }else if(this.numero.includes(\"A\")){\n        if(p+11>21 || as){\n          p=p+1;\n        }else{\n          as=true;\n          p=p+11;\n        }\n      }else{\n          p=p+parseInt(this.numero);\n      }\n      return [p,as];\n    }\n  \n    \n    \n    async getCard(e,esCasa){\n        this.index=Math.floor(Math.random() * this.palos.length);\n        this. numero=this.valores[Math.floor(Math.random() * this.valores.length)];\n      \n      if(esCasa){\n        var c=this.state.casa; \n        var aux=this.contar(this.state.puntosCasa,this.state.asCasa);\n        if(c.length===0 || this.state.fin){\n          c.push({numero:this.numero,index:this.index,visible:true});\n        }else{\n          c.push({numero:this.numero,index:this.index,visible:false});\n        }\n        await this.setState({casa:[...c],puntosCasa:parseInt(aux[0]),asCasa:aux[1]});\n      }else{\n        var c=this.state.pichon; \n        var points=this.state.puntosPichon;\n        var aux=this.contar(points,this.state.asPichon);\n        c.push({numero:this.numero,index:this.index});\n        await this.setState({pichon:[...c],puntosPichon:parseInt((aux[0])),asPichon:aux[1]},()=>{return this.puntosPichon;});\n        if(this.state.puntosPichon>=21)\n        this.plantarse(null);\n      }\n      console.log(this.state);\n\n    }\n\n\n    render(){\n        return( \n        <Container style={{padding:'5rem'}}>\n        <Row style={{minHeight:'20rem'}} className=\"justify-content-md-center\">   \n        {this.state.casa.map((card,i)=>{\n          return (card.visible)\n          ?<Col xs lg=\"2\" key={i}><Carta numero={card.numero} palo={this.palos[card.index]} color={card.index<=1?'text-black':'text-danger'} /></Col> \n          :<Col xs lg=\"2\" key={i}><Card border='dark' style={{ width: '10rem',height:'15rem',padding:'0.125rem' }} className=\"justify-content-md-center\">\n              <Card.Img src={pichonImg} />\n          </Card></Col>\n\n        })}\n        </Row>\n        <Row style={{minHeight:'20rem'}}  className=\"justify-content-md-center\">   \n        {this.state.pichon.map((card,i)=>{\n          return <Col xs lg=\"2\" key={i}>\n                  <Carta numero={card.numero} palo={this.palos[card.index]} color={card.index<=1?'text-black':'text-danger'} />\n                </Col> \n        })}\n        </Row>\n        <Row className=\"justify-content-md-center\">   \n        <Button variant='info' onClick={(e)=>this.getCard(e,false)} >Dame Carta</Button>&nbsp;\n        <Button variant='info' onClick={this.plantarse} >Plantarse</Button>&nbsp;\n        <Button variant='info' onClick={this.refresh} >Repartir</Button>&nbsp;\n        </Row>\n      </Container>)\n    };\n}"]},"metadata":{},"sourceType":"module"}